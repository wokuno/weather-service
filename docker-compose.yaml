version: "3"
services:
  caddy-gen:
    image: "wemakeservices/caddy-gen:latest"
    restart: always
    privileged: true
    volumes:
      - /run/user/1000/podman/podman.sock:/tmp/docker.sock:Z  # Mount the Docker socket
      - /srv/caddy-info:/data/caddy  # Mount a volume for certificate backup
    ports:
      - "80:80"  # Expose port 80 for HTTP
      - "443:443"  # Expose port 443 for HTTPS
    depends_on:
      - weather-service

  weather-service:
    image: weather-service:latest  # Updated image name
    labels:
      - "virtual.host=weather.wokuno.com"  # Updated domain
      - "virtual.alias=www.weather.wokuno.com"  # Updated domain alias (optional)
      - "virtual.port=8080"  # Exposed port of your Go service container
      - "virtual.tls-email=will@plover.io"  # Email address for TLS certificates
    environment:
      - POSTGRES_USER=${POSTGRES_USER}  # Use the environment variable for PostgreSQL username
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # Use the environment variable for PostgreSQL password
      - POSTGRES_DB=${POSTGRES_DB}  # Use the environment variable for PostgreSQL database name
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}  # Use the environment variable for PostgreSQL username
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # Use the environment variable for PostgreSQL password
      - POSTGRES_DB=${POSTGRES_DB}  # Use the environment variable for PostgreSQL database name
    ports:
      - "5432:5432"  # Expose port 5432 for PostgreSQL
    volumes:
      - /srv/pgdata:/var/lib/postgresql/data  # Mount a volume for persistent data storage
    command: ["postgres", "-c", "shared_preload_libraries=uuid-ossp"]  # Enable uuid-ossp extension
